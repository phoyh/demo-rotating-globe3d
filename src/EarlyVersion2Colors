	include	/includes/exec/exec_lib.i
	include	/includes/intuition/intuition_lib.i
	include	/includes/hardware/offsets.i
	include	/includes/libraries/dos_lib.i
size	equ	18945
sizeInit	equ	12646
	lea	DosName,a1
	move.l	4.w,a6
	moveq	#0,d0
	jsr	OpenLibrary(a6)
	move.l	d0,_DosBase
	lea	IntName,a1
	moveq	#0,d0
	jsr	OpenLibrary(a6)
	move.l	d0,_IntBase
	bsr	WeltAlloc
	bsr	WeltLoad
	bsr	WeltInit
	bsr	Calculate
	lea	screendata,a0
	move.w	#320,4(a0)
	move.w	#256,6(a0)
	move.w	#1,8(a0)
	move.l	_IntBase,a6
	jsr	OpenScreen(a6)
	move.l	d0,screenpointer
	move.l	d0,a0
	move.l	88(a0),a0
	move.l	8(a0),a0
	move.l	a0,BitPlane
	move.l	World,a4
	move.l	Calculated,a5
	moveq	#0,d6
Loop	move.l	DestRelWorld,a1
	move.l	DestWorld,a2
	move.l	SourWorld,a3
	moveq	#15,d5
DivideUp	cmpi.b	#7,d5
	beq	CalcIt
	bsr	DrawWelt
	bra	NoCalc
CalcIt	bsr	CalcDrawWelt
NoCalc	dbf	d5,DivideUp
	addq.w	#1,d6
	cmpi.w	#640,d6
	bne	git
	moveq	#0,d6
	move.l	Calculated,a5
git	btst	#6,ciaapra
	bne	Loop
	move.l	screenpointer,a0
	move.l	_IntBase,a6
	jsr	CloseScreen(a6)
	move.l	_IntBase,a1
	move.l	4.w,a6
	jsr	CloseLibrary(a6)
	move.l	_DosBase,a1
	jsr	CloseLibrary(a6)
	bsr	WeltFree
	rts
CalcDrawWelt	movem.l	a1-3,-(a7)
	movea.l	a0,a1
	adda.l	#16,a1
	move.l	(a5)+,a2
	move.w	#200,d7
CalcDrawLoop	move.l	(a2)+,(a1)+
	move.l	(a2)+,(a1)
	adda.l	#36,a1
	dbf	d7,CalcDrawLoop
	movem.l	(a7)+,a1-3
	rts
DrawWelt	move.w	#size/15-1,d7
Draw	move.w	d6,d2
	add.w	(a3)+,d2
	move.w	d2,d3
	lsr.w	#3,d2
	add.w	(a3)+,d2
	not.b	d3
	and.b	#7,d3
	move.b	(a1)+,d0
	move.w	(a2)+,d1
	btst	d3,(a4,d2.w)
	beq	NoPoint
	bset	d0,(a0,d1.w)
	bra	EndDraw
NoPoint	bclr	d0,(a0,d1.w)
EndDraw	dbf	d7,Draw
	rts
WeltInit	move.l	_DosBase,a6
	move.l	#DRW,d1
	move.l	#1005,d2
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d0,d1
	move.l	zwi,d2
	move.l	#size/2+1,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	zwi,a0
	move.l	DestRelWorld,a1
	move.l	#size/2,d0
InitRel	move.b	(a0)+,d1
	move.b	d1,d2
	lsr.b	#4,d1
	and.b	#7,d1
	and.b	#7,d2
	move.b	d1,(a1)+
	move.b	d2,(a1)+
	dbf	d0,InitRel
	move.l	#DW,d1
	move.l	#1005,d2
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d0,d1
	move.l	DestWorld,d2
	move.l	#size*2,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	#SW,d1
	move.l	#1005,d2
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d0,d1
	move.l	zwi,d2
	move.l	#size*3,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	zwi,a0
	move.l	SourWorld,a1
	move.l	#size-1,d0
SourInit	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	moveq	#0,d1
	move.b	(a0)+,d1
	mulu	#80,d1
	move.w	d1,(a1)+
	dbf	d0,SourInit
	move.l	4.w,a6
	move.l	zwi,a1
	move.l	#size*3,d0
	jsr	FreeMem(a6)
	rts
Calculate	move.l	#640*4,d0
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,Calculated
	move.l	d0,a5
	move.w	#639,d7
AllocCalc	move.l	#1608,d0
	move.l	#$10001,d1
	jsr	AllocMem(a6)
	move.l	d0,(a5)+
	dbf	d7,AllocCalc
	move.l	#sizeInit*3,d0
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,zwi
	move.l	#sizeInit,d0
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,DestRWorldInit
	move.l	#sizeInit*2,d0
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,DestWorldInit
	move.l	#sizeInit*4,d0
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,SourWorldInit
	move.l	_DosBase,a6
	move.l	#DRWI,d1
	move.l	#1005,d2
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d0,d1
	move.l	zwi,d2
	move.l	#sizeInit/2+1,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	zwi,a0
	move.l	DestRWorldInit,a1
	move.l	#sizeInit/2,d0
InitRelCal	move.b	(a0)+,d1
	move.b	d1,d2
	lsr.b	#4,d1
	and.b	#7,d1
	and.b	#7,d2
	move.b	d1,(a1)+
	move.b	d2,(a1)+
	dbf	d0,InitRelCal
	move.l	#DWI,d1
	move.l	#1005,d2
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d0,d1
	move.l	DestWorldInit,d2
	move.l	#sizeInit*2,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	#SWI,d1
	move.l	#1005,d2
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d0,d1
	move.l	zwi,d2
	move.l	#sizeInit*3,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	zwi,a0
	move.l	SourWorldInit,a1
	move.l	#sizeInit-1,d0
SourInitCal	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	moveq	#0,d1
	move.b	(a0)+,d1
	mulu	#80,d1
	move.w	d1,(a1)+
	dbf	d0,SourInitCal
	move.l	4.w,a6
	move.l	zwi,a1
	move.l	#sizeInit*3,d0
	jsr	FreeMem(a6)
	move.l	Calculated,a5
	move.l	World,a4
	moveq	#0,d6
InitCalcFrame	move.w	#sizeInit-1,d7
	move.l	DestRWorldInit,a1
	move.l	DestWorldInit,a2
	move.l	SourWorldInit,a3
	move.l	(a5)+,a0
DrawCalc	move.w	d6,d2
	add.w	(a3)+,d2
	move.w	d2,d3
	lsr.w	#3,d2
	add.w	(a3)+,d2
	not.b	d3
	and.b	#7,d3
	move.b	(a1)+,d0
	move.w	(a2)+,d1
	btst	d3,(a4,d2.w)
	beq	NoPointCalc
	bset	d0,(a0,d1.w)
NoPointCalc	dbf	d7,DrawCalc
	bchg	#1,ciaapra
	add.w	#1,d6
	cmpi.w	#640,d6
	bne	InitCalcFrame
	move.l	SourWorldInit,a1
	move.l	#sizeInit*4,d0
	jsr	FreeMem(a6)
	move.l	DestWorldInit,a1
	move.l	#sizeInit*2,d0
	jsr	FreeMem(a6)
	move.l	DestRWorldInit,a1
	move.l	#sizeInit,d0
	jsr	FreeMem(a6)
	rts
WeltAlloc	move.l	#size,d0
	move.l	#1,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	move.l	d0,DestRelWorld
	move.l	#size*2,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,DestWorld
	move.l	#size*4,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,SourWorld
	move.l	#640/8*201,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,World
	move.l	d0,a0
	adda.l	#640/8*200,a0
	moveq	#19,d7
InitWeltBorder	move.l	#$FFFFFFFF,(a0)+
	dbf	d7,InitWeltBorder
	move.l	#size*3,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,zwi
	rts
WeltLoad	move.l	#WeltName,d1
	move.l	#-2,d2
	move.l	_DosBase,a6
	jsr	Lock(a6)
	move.l	d0,d7
	move.l	#260,d0
	move.l	#1,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	move.l	d0,IFFData
	move.l	d7,d1
	move.l	IFFData,d2
	move.l	d2,d6
	move.l	_DosBase,a6
	jsr	Examine(a6)
	move.l	d6,a6
	move.l	124(a6),DateiLength
	move.l	IFFData,a1
	move.l	#260,d0
	move.l	4.w,a6
	jsr	FreeMem(a6)
	move.l	DateiLength,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,IFFData
	move.l	#WeltName,d1
	move.l	#1005,d2
	move.l	_DosBase,a6
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d7,d1
	move.l	IFFData,d2
	move.l	DateiLength,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	IFFData,a2	
	clr.l	Empty
	lea	Empty,a0
BODYLoop	move.b	1(a0),(a0)
	move.b	2(a0),1(a0)
	move.b	3(a0),2(a0)
	move.b	(a2)+,3(a0)
	cmpi.l	#"BODY",Empty
	bne	BODYLoop
	adda.l	#4,a2
DeCode	clr.l	xyPos
	move.w	#199,d3
HightLoop	move.l	World,d0
	add.l	xyPos,d0
	move.l	d0,a0
	moveq	#0,d1
Row	cmpi.w	#80,d1
	bge	Interpreted
	move.b	(a2)+,Byte
	move.b	(a2)+,Byte+1
	moveq	#0,d0
	move.b	Byte,d0
	cmpi.b	#127,d0
	bls	DeEasy
DeSame	sub.b	#3,d0
	move.w	#254,d4
	sub.b	d0,d4
	add.w	d4,d1
	sub.w	#1,d4
DeSameCopy	move.b	Byte+1,(a0)+
	dbf	d4,DeSameCopy
	bra	Row
DeEasy	move.b	Byte+1,(a0)+
	add.w	#1,d1
	tst.b	Byte
	beq	Row
	add.w	d0,d1
	sub.w	#1,d0
DeEasyCopy	move.b	(a2)+,(a0)+
	dbf	d0,DeEasyCopy
	bra	Row
Interpreted	move.l	#80,d0
	add.l	d0,xyPos
	dbf	d3,HightLoop
DeCodeEnd	move.l	IFFData,a1
	move.l	DateiLength,d0
	move.l	4.w,a6
	jsr	FreeMem(a6)
	rts
WeltFree	move.l	DestRelWorld,a1
	move.l	4.w,a6
	move.l	#size,d0
	jsr	FreeMem(a6)
	move.l	DestWorld,a1
	move.l	#size*2,d0
	jsr	FreeMem(a6)
	move.l	SourWorld,a1
	move.l	#size*4,d0
	jsr	FreeMem(a6)
	move.l	World,a1
	move.l	#640/8*201,d0
	jsr	FreeMem(a6)
	move.l	Calculated,a5
	move.w	#639,d7
FreeCalculated	move.l	(a5)+,a1
	move.l	#1608,d0
	jsr	FreeMem(a6)
	dbf	d7,FreeCalculated
	move.l	Calculated,a1
	move.l	#640*4,d0
	jsr	FreeMem(a6)
	rts
screenpointer	dc.l	0
DestRelWorld	dc.l	0
DestWorld	dc.l	0
SourWorld	dc.l	0
DestRWorldInit	dc.l	0
DestWorldInit	dc.l	0
SourWorldInit	dc.l	0
zwi	dc.l	0
BitPlane	dc.l	0
World	dc.l	0
Calculated	dc.l	0
_IntBase	dc.l	0
_DosBase	dc.l	0
Byte	dc.w	0
DateiLength	dc.l	0
Empty	dc.l	0
xyPos	dc.l	0
IFFData	dc.l	0
RealNames	dc.l	DRW
	dc.l	DestRelWorld
	dc.l	DW
	dc.l	DestWorld
	dc.l	SW
	dc.l	SourWorld
InitNames	dc.l	DRWI
	dc.l	DestRWorldInit
	dc.l	DWI
	dc.l	DestWorldInit
	dc.l	SWI
	dc.l	SourWorldInit
screendata	ds.b	32
WeltName	dc.b	"/pics/Welt.pic",0
DRW	dc.b	"/pics/DestRelWorld",0
DW	dc.b	"/pics/DestWorld",0
SW	dc.b	"/pics/SourWorld",0
DRWI	dc.b	"/pics/DestRelWorldInit",0
DWI	dc.b	"/pics/DestWorldInit",0
SWI	dc.b	"/pics/SourWorldInit",0
DosName	dosname
IntName	intname
